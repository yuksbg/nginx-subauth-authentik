name: Build

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Clean up old build artifacts
        run: rm -f auth-service auth-service-amd64 auth-service-arm6

      - name: Build for linux/amd64
        if: startsWith(github.ref, 'refs/tags/v')
        run: GOOS=linux GOARCH=amd64 go build -v -o auth-service-amd64 .

      - name: Build for linux/arm (armv6)
        if: startsWith(github.ref, 'refs/tags/v')
        run: GOOS=linux GOARCH=arm GOARM=6 go build -v -o auth-service-arm6 .

      # Check if release exists or create it, and get upload_url
      - name: Get or Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            let release;
            try {
              release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag
              });
            } catch (error) {
              if (error.status === 404) {
                release = await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tag,
                  name: `Release ${tag}`,
                  draft: false,
                  prerelease: false
                });
              } else {
                throw error;
              }
            }
            core.setOutput('upload_url', release.data.upload_url);

      - name: Upload Release Asset amd64
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./auth-service-amd64
          asset_name: auth-service-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset armv6
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./auth-service-arm6
          asset_name: auth-service-arm6
          asset_content_type: application/octet-stream